# .github/workflows/vercel-deploy.yml
name: Vercel Deployment CI/CD

on:
    push:
        branches: [ develop, main ]
    pull_request:
        branches: [ develop ]

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
    # Job de tests
    test:
        runs-on: ubuntu-latest
        name: Tests et Qualité

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Lint Code
              run: npm run lint

            - name: Run Unit Tests
              run: npm run test:ci

            - name: Run E2E Tests
              run: npm run e2e:ci

            - name: Build Application
              run: npm run build -- --configuration=production

            - name: Upload Coverage Reports
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage/lcov.info

    # Job de déploiement
    deploy:
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Install Vercel CLI
              run: npm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts
              run: vercel deploy ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
